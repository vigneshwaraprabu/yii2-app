name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          COMMIT_ID=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t ${{ secrets.DOCKER_USERNAME }}/yii2-app:$COMMIT_ID .
          docker push ${{ secrets.DOCKER_USERNAME }}/yii2-app:$COMMIT_ID
          echo "IMAGE_TAG=COMMIT_ID" >> $GITHUB_ENV

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Set current and previous image tags
            NEW_TAG=${{ env.IMAGE_TAG }}
            SERVICE_NAME=yii2_web
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/yii2-app

            echo "New image tag: $NEW_TAG"

            # Save current image tag
            docker service inspect $SERVICE_NAME --format '{{.Spec.TaskTemplate.ContainerSpec.Image}}' | awk -F'[/:@]' '{print $(NF-2)}' > /tmp/prev_tag || echo "none" > /tmp/prev_tag
            PREV_TAG=$(cat /tmp/prev_tag)
            echo "Previous image tag: $PREV_TAG"

            # Try to update service
            if docker service update --image $IMAGE_NAME:$NEW_TAG $SERVICE_NAME; then
              echo "✅ Deployment succeeded."
              echo "$NEW_TAG" > /tmp/prev_tag
            else
              echo "❌ Deployment failed. Rolling back to previous version..."
              if [ "$PREV_TAG" != "none" ]; then
                docker service update --image $IMAGE_NAME:$PREV_TAG $SERVICE_NAME
                echo "✅ Rolled back to $PREV_TAG"
              else
                echo "⚠️ No previous version to roll back to."
              fi
            fi
